apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-static-ingress
  annotations: 
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
  #- host: 192.168.88.133
  - http:
      paths: 
      - path: /
        backend:
          serviceName: nginx-static-svc
          servicePort: 80
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-static-svc
  labels:
    app: nginx-static
spec:
  type: LoadBalancer  #[ClusterIP|NodePort|LoadBalancer|ExternalName]
  sessionAffinity: ClientIP  #[ClientIP|None]
  selector:
    app: nginx-static
  ports:
  - name: http-static
    protocol: TCP
    port: 80
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-static-cf
  namespace: default
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      #include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;
      disable_symlinks off;
      
      include /etc/nginx/conf.d/*.conf;
    }

  default.conf: |
    server {
      listen        80;
      autoindex     on;
      charset       utf-8,gbk,gb2312;
      
      location / {
        root   /var/www/html;
      }
      
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-static-deploy
  labels:
    app: nginx-static
spec:
  selector:
    matchLabels:
      app: nginx-static
  revisionHistoryLimit: 2
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx-static
    spec:
      nodeSelector: 
        kubernetes.io/hostname: node.master.192.168.88.133
      #topologySpreadConstraints:
      #- maxSkew: 1
      #  topologyKey: role=master # node label
      #  whenUnsatisfiable: DoNotSchedule # [DoNotSchedule/ScheduleAnyway]
      #  labelSelector:
      #    matchLabels:
      #      app: nginx-static
      containers:
      - name: nginx-static
        image: nginx
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        #- name: nginx-static-cf-volume
        #  mountPath: /etc/nginx/
        - name: nginx-static-cf-sub-volume
          mountPath: /etc/nginx/conf.d/  
        - name: nginx-static-html-volume
          mountPath: /var/www/html
        args: []
      volumes:
      - name: nginx-static-cf-volume
        configMap:
          name: nginx-static-cf
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-static-cf-sub-volume
        configMap:
          name: nginx-static-cf
          items:
          - key: default.conf
            path: default.conf            
      - name: nginx-static-html-volume
        hostPath:
          path: /var/www/html
      restartPolicy: Always